{"version":3,"sources":["components/Header.js","components/Item.js","components/AddForm.js","components/ListContainer.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Item","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","editSave","ev","state","active","setState","savePlayer","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","firebase","collection","doc","JSON","stringify","props","player","sortBy","set","name","nameRef","current","value","position","positionRef","merge","then","console","log","catch","error","getPlayers","stop","waivePlayer","deletePlayer","React","createRef","defaultValue","ref","onClick","AddForm","preventDefault","newName","newPosition","newPlayer","id","Date","now","addPlayer","alert","placeholder","ListContainer","players","map","item","Item_Item","key","AddForm_AddForm","App","newPlayers","orderBy","get","querySnapshot","forEach","data","push","_ref2","_callee2","playerId","_context2","delete","_x","apply","arguments","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","react","Header_Header","ListContainer_ListContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.330131f7.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Header.css';\n\nexport default class Header extends Component{\n    // constructor(){\n    //     super()\n    // }\n\n    render(){\n        return(\n            <header className=\"app-header\">\n            <h1>Player Registry</h1>\n            </header>\n        )\n    }\n}","import React, {Component} from 'react';\nimport * as firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport './Item.css';\nimport PropTypes from 'prop-types'\n\nexport default class Item extends Component{\n    constructor(){\n        super()\n        this.state = {\n            active: false\n        }\n        this.nameRef = React.createRef();\n        this.positionRef = React.createRef();\n    }\n\n    editSave = (ev) => {\n        this.state.active?this.setState({active: false}):this.setState({active: true});\n    }\n\n    savePlayer = async () => {\n                this.editSave();\n                // this.props.player.name = this.nameRef.current.value;\n                // this.props.player.position = this.positionRef.current.value;\n\n              await firebase.firestore().collection(\"favPlayers\").doc(JSON.stringify(this.props.player.sortBy)).set({\n                    name: this.nameRef.current.value,\n                    position: this.positionRef.current.value\n                }, {\n                    merge: true\n                }).then(console.log(\"works\")).catch(function (error) {\n                    console.log('error', error);\n                })\n\n                this.props.getPlayers()\n                \n    }\n\n    waivePlayer = () => {\n        this.props.deletePlayer(this.props.player.sortBy);\n    }\n\n    render(){\n        return(\n            <li className=\"item\">\n\n            <div className=\"item-container\">\n            <h1 className={this.state.active?\"hide\":null}>{this.props.player.name}</h1>\n            <p className={this.state.active?\"hide\":null}>{this.props.player.position}</p>\n            <input className={this.state.active?\"input-field\":\"hide\"} defaultValue={this.props.player.name} ref={this.nameRef}></input>\n            <input className={this.state.active?\"input-field\":\"hide\"} defaultValue={this.props.player.position} ref={this.positionRef}></input>\n            </div>\n\n            <div className=\"button-container\">\n            <button onClick={this.editSave} className={this.state.active?\"hide\":\"button button-edit\"}>Edit</button>\n            <button onClick={this.waivePlayer} className={this.state.active?\"hide\":\"button button-delete\"}>Delete</button>\n            <button onClick={this.savePlayer} className={this.state.active?\"button button-save\":\"hide\" }>Save</button>\n            </div>\n\n            </li>\n\n            \n        )\n    }\n}\n\n// Item.propTypes = {\n//     player: PropTypes.shape({\n//         name: PropTypes.string,\n//         position: PropTypes.string,\n//         id: PropTypes.number.isRequired\n//     })\n// }\n\n// Item.defaultProps = {\n//     player: {\n//         name: \"Unknown\",\n//         position: \"Sixth Man\",\n//         id: 0\n//     }\n// }","import React, {Component} from 'react';\nimport './AddForm.css';\n\n\nexport default class AddForm extends Component{\n    constructor(){\n        super();\n\n        this.newName = React.createRef();\n        this.newPosition = React.createRef();\n    }\n\n    savePlayer = (ev) => {\n        ev.preventDefault();\n        if(this.newName.current.value && this.newPosition.current.value){\n            let newPlayer = {id:Date.now(), name:this.newName.current.value, position:this.newPosition.current.value};\n            this.props.addPlayer(newPlayer);\n            this.newName.current.value = \"\";\n            this.newPosition.current.value = \"\";\n        }else{\n            alert(\"Please fill out the form.\");\n        }\n    }\n\n    render(){\n        return(\n            <form className=\"split addForm\"> \n            <h1>Register</h1>\n                <input className=\"input-field\" placeholder=\"Name\" ref={this.newName}></input>\n                <input className=\"input-field\" placeholder=\"Position\" ref={this.newPosition}></input>\n                <button onClick={this.savePlayer} className=\"button button-save\">Save</button>\n            </form>\n\n        )\n    }\n}","import React, {Component} from 'react';\nimport './ListContainer.css';\nimport Item from './Item';\nimport AddForm from './AddForm';\n\n\nexport default class ListContainer extends Component{\n    constructor(){\n        super()\n        // this.state = {players: [\n        //     {id: 1, name: \"Guo Ailun\", position: \"Point Guard\"},\n        //     {id: 2, name: \"Yi Jianlian\", position: \"Power Foward\"},\n        //     {id: 3, name: \"Yao Ming\", position: \"Center\"}\n        // ]}\n    }\n\n    // deletePlayer = (playerId) => {\n    //     let newPlayers = this.state.players.filter((item) => {\n    //         if(playerId != item.id){\n    //             return true;\n    //         }\n    //     });\n    //     this.setState({players: newPlayers});\n    // }\n\n    // addPlayer = (newPlayer) => {\n    //     let newPlayers = this.state.players;\n    //     newPlayers.push(newPlayer);\n    //     this.setState({players: newPlayers});\n    // }\n\n\n    render(){\n        return(\n            <ul className=\"split list-container\">\n            {this.props.players.map((item) => (\n            <Item key={item.sortBy} player={item} deletePlayer={this.props.deletePlayer} getPlayers={this.props.getPlayers}/>\n            ))}\n            <AddForm addPlayer={this.props.addPlayer}/>\n            </ul>\n        )\n    }\n}","import React, { Component, Fragment } from 'react';\nimport * as firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport Header from './components/Header';\nimport ListContainer from './components/ListContainer';\n\nclass App extends Component {\n  constructor(){\n    super()\n\n    try {\n      var config = {\n        apiKey: \"AIzaSyA_jn5N28330IwpQCBwZ8-w343Wvsd3Rjg\",\n        authDomain: \"hybridelective-4c7a0.firebaseapp.com\",\n        databaseURL: \"https://hybridelective-4c7a0.firebaseio.com\",\n        projectId: \"hybridelective-4c7a0\",\n        storageBucket: \"hybridelective-4c7a0.appspot.com\",\n        messagingSenderId: \"723802225790\"\n      };\n      firebase.initializeApp(config);\n    } catch (error) {\n      console.log(error)\n    }\n    firebase.firestore().settings({timestampsInSnapshots: true});\n\n    this.state = {players: [\n    ]}\n    this.getPlayers()\n}\n\ngetPlayers = async () => {\n    let newPlayers = this.state.players;\n    await firebase.firestore().collection(\"favPlayers\").orderBy(\"sortBy\").get().then(function(querySnapshot) {\n      querySnapshot.forEach(function(doc) {\n          console.log(doc.data());\n          newPlayers.push(doc.data());\n      });\n  });\n  this.setState({players: newPlayers});\n}\n\ndeletePlayer = async (playerId) => {\n  // let newPlayers = this.state.players.filter((item) => {\n  //     if(playerId !== item.id){\n  //         return true;\n  //     }\n  // });\n  // this.setState({players: newPlayers});\n\n\n  await firebase.firestore().collection(\"favPlayers\").doc(JSON.stringify(playerId)).delete()\n  .then(console.log(\"works\")).catch(function (error) {\n      console.log('error', error);\n  })\n  this.getPlayers();\n}\n\naddPlayer = (newPlayer) => {\n  // let newPlayers = this.state.players;\n  // newPlayers.push(newPlayer);\n  // this.setState({players: newPlayers});\n\n  firebase.firestore().collection(\"favPlayers\").doc(JSON.stringify(newPlayer.id)).set({\n    name: newPlayer.name,\n    position: newPlayer.position,\n    sortBy: newPlayer.id\n    }).then(console.log(\"works\")).catch(function (error) {\n      console.log('error', error);\n    })\n    this.getPlayers();\n}\n\n\n  render() {\n    return (\n        <Fragment>\n          <Header />\n          <ListContainer players={this.state.players} addPlayer={this.addPlayer} deletePlayer={this.deletePlayer} getPlayers={this.getPlayers}/>\n        </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}